@using TestTaskWaveAccess.Models
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<Movie>
@{
    ViewData["Title"] = "Movies";
}
<link href="~/Content/PagedList.css" rel="stylesheet" />  
<link rel="stylesheet" href="~/css/Pages.css" />


<div class="text-center">
    <h1 class="display-4">Movies</h1>

    <table class="table">
        <tr>
            <th>
                MovieId
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.TitleSort">
                    Title
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.ReleaseYearSort">
                    Release Year
                </a>
            </th>
            <th>
                Description
            </th>>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.AverageRatingSort">
                    Average Rating
                </a>
            </th>>
        </tr>
        @foreach (Movie movie in Model)
        {
            <tr>
                <td>@movie.MovieId</td>
                <td>@movie.Title</td>
                <td>@movie.ReleaseYear</td>
                <td>@movie.Description</td>
                <td>@movie.AverageRating</td>
            </tr>
        }

    </table>
</div>

<br />
Page @(Model.PageCount < @Model.PageNumber ? 0 : @Model.PageNumber of @Model.PageCount
@X.PagedList.Mvc.Core.HtmlHelper.PagedListPager(Html, Model, page => Url.Action("Index", new { page }))