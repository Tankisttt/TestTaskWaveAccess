@using TestTaskWaveAccess.Models
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<Actor>
@{
    ViewData["Title"] = "Actors";
}
<link href="~/Content/PagedList.css" rel="stylesheet" />  
<link href="~/css/Pages.css" rel="stylesheet" />

<div class="text-center">
    <h1 class="display-4">Actors</h1>

    <table class="table">
        <tr>
            <th>Actor Id</th>
            <th><a asp-action="Index" asp-route-sortOrder="@ViewBag.BirthDateSort">Birth Date</a></th>
            <th><a asp-action="Index" asp-route-sortOrder="@ViewBag.FullNameSort">Full Name</a></th>
            <th>Biography</th>
        </tr/>
        @foreach (Actor actor in Model)
        {
            <tr>
                <td>@actor.ActorId</td>
                <td>@actor.BirthDate</td>
                <td>@actor.FullName</td>
                <td>@actor.Bio</td>
            </tr>
        }
    </table>
</div>

<br/>
Page @(Model.PageCount < @Model.PageNumber ? 0 : @Model.PageNumber) of @Model.PageCount
@X.PagedList.Mvc.Core.HtmlHelper.PagedListPager(Html, Model, page => Url.Action("Index", new { sortOrder = ViewBag.CurrentSort, page }))